import type { NextPage } from 'next'
import Head from 'next/head'
import { useEffect, useState } from 'react'
import { useMoralis, useWeb3Contract } from 'react-moralis'
import { Button } from 'web3uikit'
import {
  DescriptionComponent,
  MemberTableComponent,
  NavbarComponent,
} from '../components'
import { ABI, CONTRACT_ADDRESS } from '../constants'

const Home: NextPage = () => {
  const [contractBalance, setContractBalance] = useState('0')
  const [memberCount, setMemberCount] = useState('0')
  const [joinFee, setJoinFee] = useState('0')
  const [numberGettingPaid, setNumberGettingPaid] = useState('0')
  const [currentMemberNumber, setCurrentMemberNumber] = useState(null)
  const [interval, setInterval] = useState(null)

  const { isWeb3Enabled, chainId, Moralis, account } = useMoralis()
  // 0xC99df554F832e635a597Bfe84CEfaf1804aAD729

  useEffect(() => {
    if (isWeb3Enabled) {
      populateData()
    }
  }, [isWeb3Enabled, account])

  const populateData = async () => {
    try {
      const balance: any = await getBalance()
      setContractBalance(balance.toString())

      const joinAmount: any = await getJoinFee()
      setJoinFee(joinAmount.toString())

      const members: any = await getMemberCount()
      setMemberCount(members.toString())

      const number: any = await getNumberGettingPaid()
      setNumberGettingPaid(number.toString())

      const userNumber: any = await getMemberNumber()
      setCurrentMemberNumber(userNumber.toString())
      console.log(userNumber.toString())

      const saccoInterval: any = await getInterval()
      setInterval(saccoInterval.toString())
    } catch (error: any) {
      console.log(error.message)
    }
  }

  const { runContractFunction: getBalance } = useWeb3Contract({
    abi: ABI,
    contractAddress: CONTRACT_ADDRESS,
    functionName: 'getBalance',
    params: {},
  })

  const { runContractFunction: getJoinFee } = useWeb3Contract({
    abi: ABI,
    contractAddress: CONTRACT_ADDRESS,
    functionName: 'getJoinFee',
    params: {},
  })

  const { runContractFunction: getMemberCount } = useWeb3Contract({
    abi: ABI,
    contractAddress: CONTRACT_ADDRESS,
    functionName: 'getMemberCount',
    params: {},
  })

  const { runContractFunction: getNumberGettingPaid } = useWeb3Contract({
    abi: ABI,
    contractAddress: CONTRACT_ADDRESS,
    functionName: 'getNumberGettingPaid',
    params: {},
  })

  const { runContractFunction: getMemberNumber } = useWeb3Contract({
    abi: ABI,
    contractAddress: CONTRACT_ADDRESS,
    functionName: 'getMemberNumber',
    params: { memberAddress: account },
  })

  const { runContractFunction: getInterval } = useWeb3Contract({
    abi: ABI,
    contractAddress: CONTRACT_ADDRESS,
    functionName: 'getInterval',
    params: {},
  })

  const {
    runContractFunction: join,
    data: enterTxResponse,
    isLoading,
    isFetching,
  } = useWeb3Contract({
    abi: ABI,
    contractAddress: CONTRACT_ADDRESS,
    functionName: 'join',
    params: {},
    msgValue: joinFee,
  })

  return (
    <div>
      <Head>
        <title>TeSacco</title>
        <meta
          name="Decentralized group savings application"
          content="Generated by create next app"
        />
        <link rel="icon" href="/favicon.ico" />
        {/* <link rel="preconnect" href="https://fonts.googleapis.com"> */}
        {/* <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> */}
        <link
          href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500&display=swap"
          rel="stylesheet"
        />
      </Head>

      <main className="flex flex-col flex-1 mt-20">
        <NavbarComponent isWeb3Enabled={isWeb3Enabled} />
        <div className=" bg-gray-900 p-10 h-screen">
          <DescriptionComponent
            isWeb3Enabled={isWeb3Enabled}
            contractBalance={contractBalance}
            joinFee={joinFee}
            memberCount={memberCount}
            numberGettingPaid={numberGettingPaid}
            currentMemberNumber={currentMemberNumber}
            interval={interval}
            join={join}
            isLoading={isLoading}
            isFetching={isFetching}
          />

          <div className="flex flex-1 w-full">
            <MemberTableComponent />
          </div>
        </div>
      </main>

      <footer className=""></footer>
    </div>
  )
}

export default Home
